@using Resources;
@using NLog;
@{
    var log = LogManager.GetLogger("Login");
    Layout = "~/Account/_Layout.cshtml";
    Page.Title = $"{AppResources.SignIn} | TimeLoggerLive";
    if (Request.HttpMethod == "POST")
    {
        var username = Request.Form["inUsername"];
        var password = Request.Form["inPassword"];
        if ((!string.IsNullOrEmpty(username)) && (!string.IsNullOrEmpty(password)))
        {
            AntiForgery.Validate();
            log.Debug($"({username}) Logging in");
            if (Membership.ValidateUser(HttpUtility.HtmlEncode(username), password))
            {
                log.Info($"({username}) Logged in");
                if ("admin" == username.ToLower())
                {
                    FormsAuthentication.SetAuthCookie(username, false);
                    Response.Redirect("~/Admin/Dashboard");
                }
                else
                {
                    FormsAuthentication.RedirectFromLoginPage(username, false);
                }
            }
            else
            {
                log.Info($"({username}) failed login attempt");
            }
        }
        else if (!string.IsNullOrEmpty(Request["signout"]))
        {
            log.Debug($"({User.Identity.Name}): signing out");
            FormsAuthentication.SignOut();
            log.Info($"({User.Identity.Name}): signed out");
            Response.Redirect(Request["ReturnUrl"], true);
        }
    }
    else if (User.Identity.IsAuthenticated)
    {
        log.Info($"({User.Identity.Name}) already signed in");
        if (User.IsInRole("Admin"))
        {
            Response.Redirect("~/Admin/Dashboard");
        }
        else
        {
            Response.Redirect("~/Home");
        }
    }
}

<section class="container container-table">
    <div class="row vertical-center-row">
        @if (!User.Identity.IsAuthenticated)
        {
            <form name="login" action="@Request.RawUrl" method="post" accept-charset="utf-8" class="form-signin text-center col-md-4 col-md-offset-4"
                  novalidate="novalidate">
                <fieldset>
                    @if (Request.HttpMethod == "POST")
                    {
                        <p class="bg-danger">
                            <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>
                            @AppResources.LoginError
                        </p>
                    }
                    <div>
                        <label for="inUsername" class="text-left">@AppResources.Username:</label>
                        <input type="email" name="inUsername" id="inUsername" value="" class="form-control" autofocus />
                    </div>
                    <div>
                        <label for="inPassword">@AppResources.Password:</label>
                        <input type="password" name="inPassword" id="inPassword" value="" class="form-control" />
                    </div>
                    <div class="form-signin-btn">
                        <button type="submit" class="btn btn-lg btn-danger btn-block">
                            <i class="fa fa-sign-in"></i>
                            @AppResources.SignIn
                        </button>
                    </div>
                    <div>
                        <a href="/App/PasswordResetRequest">@AppResources.ForgotPassword</a>
                    </div>
                </fieldset>
                @AntiForgery.GetHtml()
            </form>
        }
    </div>
</section>